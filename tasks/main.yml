---
- name: python-pam dependencies
  yum:
    name: "{{ item }}"
  become: yes
  with_items:
    - pam-devel
    - gcc

- name: Ensure pip is installed
  package:
    name: python-pip
    state: latest
  become: yes

- name: Install python-pam and other keystone-auth dependencies
  pip:
    name: "{{ item }}"
  become: yes
  with_items:
    - python-pam
    - python-memcached
    - sphinx

- name: Ensure extract directory exists
  file:
    dest: "{{ os_keystone_pam_python_extract_root }}"
    owner: root
    group: root
    state: directory
  become: yes

- name: Download pam-python
  get_url:
    url: "{{ os_keystone_pam_python_pam_url }}"
    dest: "{{ os_keystone_pam_python_extract_root }}/{{ os_keystone_pam_python_pam_version }}.tar.gz"
  become: yes

- name: Extract pam-python
  unarchive:
    src: "{{ os_keystone_pam_python_extract_root }}/{{ os_keystone_pam_python_pam_version }}.tar.gz"
    dest: "{{ os_keystone_pam_python_extract_root }}"
    remote_src: yes
  become: yes

- name: Build and Install python-pam
  shell: |
      cd src
      python setup.py install
      cd ..
      make
      cp src/pam_python.so {{ os_keystone_pam_python_pam_lib_path }}
  args:
    chdir: "{{ os_keystone_pam_python_path }}"
    creates: "{{ os_keystone_pam_python_pam_lib_path }}"
  become: yes

- name: Install keystone-auth pam
  get_url:
    url: "{{ os_keystone_pam_keystone_auth_py_url }}"
    dest: "{{ os_keystone_pam_lib_path }}"
    mode: 0555
  become: yes

- name: Copy over selinux policy violation capture
  copy:
    src: pam-python-selinux-capture
    dest: "{{ os_keystone_pam_python_extract_root }}/pam-python-selinux-capture"
  become: yes

- name: Generate and install se-linux module
  shell: |
      cat pam-python-selinux-capture | audit2allow -M keystone-pam
      semodule -i keystone-pam.pp
  args:
    chdir: "{{ os_keystone_pam_python_extract_root }}"
    creates: "{{ os_keystone_pam_python_extract_root }}/keystone-pam.pp"
  become: yes

- name: Update PAM auth configuration
  lineinfile:
    create: no
    state: present
    insertbefore: "auth *sufficient *pam_unix.*"
    line: "auth        sufficient    pam_python.so {{ os_keystone_pam_lib_path }}/keystone-auth.py {{ os_keystone_pam_os_config_name }}"
    path: "{{ item }}"
  with_items:
    - /etc/pam.d/system-auth-ac
    - /etc/pam.d/password-auth-ac
  become: yes

- name: Enable PasswordAuthentication in SSH config
  lineinfile:
    path: /etc/ssh/sshd_config
    create: no
    state: present
    insertafter: "^#PasswordAuthentication.*"
    regexp: "^PasswordAuthentication .*"
    line: "PasswordAuthentication yes"
  notify:
    - Restart SSH
  become: yes

# Note: need to create the users, currently stackhpc.os-keypair-login does.
